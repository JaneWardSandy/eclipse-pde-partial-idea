manifest.psi.cannotResolveBundle=Cannot resolve bundle {0}

manifest.lang.manifestVersion2=Manifest support for version 2
manifest.lang.invalidBlank=Blank value is invalid
manifest.lang.specifyOnly=Only {0} was allowed in {1}
manifest.lang.shouldBe={0} should be {1}
manifest.lang.multipleClause=Multiple clauses are not allowed
manifest.lang.invalidActivator=Not a valid activator class
manifest.lang.duplicate=Duplicate {0}
manifest.lang.requiredWasFragmentHost=The {0} dependency is not necessary as it is already specified in Fragment-Host header
manifest.lang.requiredCannotBeSelf=The required plugins cannot be itself
manifest.lang.hostCannotBeSelf=The host fragment cannot be itself
manifest.lang.requiredCannotBeFragment=The required plugins cannot be fragment plugins
manifest.lang.bundleNotExists=Bundle {0} not exists
manifest.lang.notExistVersionInRange=Range {0} not exist, allowed versions: {1}
manifest.lang.hostWasFragment=Host plug-ins cannot be fragment
manifest.lang.classpathMustConDot=Bundle Classpath must contain '.' to include bundle's class
manifest.lang.invalidJavaVersion=Not a valid Java version
manifest.lang.nonExportedPackage=Non exported package {0}
manifest.lang.unset=Unset
manifest.lang.additionalAPIToHost=Add additional API to the host is not allowed when the host header 'Eclipse-ExtensibleAPI' was not be 'true'. Note that this header is only used by tooling (PDE) to construct proper class paths for building. The runtime does not use this header at all. At runtime a fragment is always allowed to add additional packages, classes and resources to the API of the host
manifest.lang.cannotResolvePackage=Cannot resolve package {0}